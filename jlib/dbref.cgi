package DBRef;
use strict qw(subs vars);

use vars '@ISA';
use vars '%props';
use vars '$name';
use vars '$AUTOLOAD';
use AutoLoader;

$name = 'Ярлык';

@ISA = 'DBObject';
%props = (
	
	'name'	  => { 'type' => 'string', 'length' => 100, 'name' => 'Название' },
	'oclass'  => { 'type' => 'string', 'length' => 100, 'name' => 'Класс' },
	'oid'	  => { 'type' => 'int', 'name' => 'ID' }
);

###################################################################################################
# Следующие методы находятся в разработке
###################################################################################################



###################################################################################################
# Методы для реализации наследования Perl
###################################################################################################

sub AUTOLOAD
{
	my $o = shift;
	my $meth = $AUTOLOAD;
	$meth =~ s/.*:://;
	
	return &{$o->{'oclass'}.'::'.$meth}($o,@_);
}


sub del
{
	my $o = shift;
	my $i;
	
	print 'DELETING REF';
}

sub new
{
	my $o = {};
	bless($o);

	return $o->_construct(@_);
}

sub DESTROY
{
	my $o = shift;
	$o->SUPER::DESTROY();
}


###################################################################################################
# Дополнительные методы
###################################################################################################

sub type { return 'DBRref'; }

return 1;